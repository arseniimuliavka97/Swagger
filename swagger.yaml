openapi: 3.1.0
info:
  title: Example REST API
  description: This is a sample server for a REST API managing employees.
  termsOfService: 'http://example.com/terms/'
  contact:
    email: contact@example.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: "1.0"
servers:
  - url: https://dummy.restapiexample.com/api/v1
    description: Production server
paths:
  /employees:
    get:
      summary: List all employees
      operationId: listEmployees
      tags:
        - Employees
      responses:
        '200':
          description: An array of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create an employee
      operationId: createEmployee
      tags:
        - Employees
      requestBody:
        description: Employee to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '201':
          description: Employee created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /employee/{id}:
    get:
      summary: Get a single employee
      operationId: getEmployee
      tags:
        - Employees
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Employee id
      responses:
        '200':
          description: A single employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update an employee
      operationId: updateEmployee
      tags:
        - Employees
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Employee id
      requestBody:
        description: Updated employee information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Employee updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete an employee
      operationId: deleteEmployee
      tags:
        - Employees
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Employee id
      responses:
        '204':
          description: Employee deleted
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Employee:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 10
        employee_name:
          type: string
          example: 'John Smith'
        employee_salary:
          type: integer
          format: int64
          example: 56000
        employee_age:
          type: integer
          format: int32
          example: 40
        profile_image:
          type: string
          example: 'http://example.com/images/profile.png'

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 'Error message'
        code:
          type: integer
          format: int32
          example: 404
